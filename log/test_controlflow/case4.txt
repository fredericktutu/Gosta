# Name: main.main
# Package: main
# Location: testcase/test_controlflow/case4.go:34:6
func main():
0:                                                                entry P:0 S:0
	t0 = make chan int 0:int                                       chan int
	t1 = make chan int 0:int                                       chan int
	go A(t0, t1)
	send t0 <- 1:int
	send t1 <- 3:int
	return

<->
[bb]: 0
    <instr> 0 MAKECHAN | make chan int 0:int
        (size) 0:int
        (reg) t0
    <instr> 1 MAKECHAN | make chan int 0:int
        (size) 0:int
        (reg) t1
    <instr> 2 GO | Func name: A | Args:
        (param) 0 | Name: t0 | Type: chan int | Actually is Chan 0
        (param) 1 | Name: t1 | Type: chan int | Actually is Chan 1
    <instr> 3 SEND | To Reg: t0 | Actually is Chan 0
    <instr> 4 SEND | To Reg: t1 | Actually is Chan 1
    <instr> 5 other
[bb] 0 's states:
<state> 0
<state> 1
<state> 2
[bb] 0 's edges:
---

<->
[bb] 0 begin link state
-------------------------
# Name: main.A
# Package: main
# Location: testcase/test_controlflow/case4.go:14:6
func A(ch1 chan int, ch2 chan int):
0:                                                                entry P:0 S:2
	t0 = <-ch1                                                          int
	t1 = 1:int >= 1:int                                                bool
	if t1 goto 1 else 2
1:                                                              if.then P:1 S:1
	go B(ch1, ch2)
	t2 = <-ch1                                                          int
	jump 2
2:                                                              if.done P:2 S:0
	t3 = <-ch2                                                          int
	return

<->
[Parameters]
    <Param> -1 |Reg: ch1
    <Param> -2 |Reg: ch2
---
[bb]: 0
    <instr> 0 RECV | From Reg: ch1 | Actually is Chan -1
    <instr> 1 other
    <instr> 2 other
[bb] 0 's states:
<state> 0
<state> 1
[bb] 0 's edges:
     to 1
     to 2
---

[bb]: 1
    <instr> 0 GO | Func name: B | Args:
        (param) 0 | Name: ch1 | Type: chan int | Actually is Chan -1
        (param) 1 | Name: ch2 | Type: chan int | Actually is Chan -2
    <instr> 1 RECV | From Reg: ch1 | Actually is Chan -1
    <instr> 2 other
[bb] 1 's states:
<state> 2
<state> 3
[bb] 1 's edges:
     to 2
---

[bb]: 2
    <instr> 0 RECV | From Reg: ch2 | Actually is Chan -2
    <instr> 1 other
[bb] 2 's states:
<state> 4
<state> 5
[bb] 2 's edges:
---

<->
[bb] 0 begin link state
    <linkstate> 1 -> 2
    <linkstate> 1 -> 4
[bb] 1 begin link state
    <linkstate> 3 -> 4
[bb] 2 begin link state
-------------------------
# Name: main.B
# Package: main
# Location: testcase/test_controlflow/case4.go:25:6
func B(ch1 chan int, ch2 chan int):
0:                                                                entry P:0 S:2
	t0 = 2:int <= 3:int                                                bool
	if t0 goto 1 else 2
1:                                                              if.then P:1 S:1
	send ch1 <- 2:int
	send ch2 <- 3:int
	jump 2
2:                                                              if.done P:2 S:0
	return

<->
[Parameters]
    <Param> -1 |Reg: ch1
    <Param> -2 |Reg: ch2
---
[bb]: 0
    <instr> 0 other
    <instr> 1 other
[bb] 0 's states:
<state> 0
[bb] 0 's edges:
     to 1
     to 2
---

[bb]: 1
    <instr> 0 SEND | To Reg: ch1 | Actually is Chan -1
    <instr> 1 SEND | To Reg: ch2 | Actually is Chan -2
    <instr> 2 other
[bb] 1 's states:
<state> 1
<state> 2
<state> 3
[bb] 1 's edges:
     to 2
---

[bb]: 2
    <instr> 0 other
[bb] 2 's states:
<state> 4
[bb] 2 's edges:
---

<->
[bb] 0 begin link state
    <linkstate> 0 -> 1
    <linkstate> 0 -> 4
[bb] 1 begin link state
    <linkstate> 3 -> 4
[bb] 2 begin link state
-------------------------
Static Program after build:
 &{[0xc000005f00 0xc000005f60 0xc000005fe0] [{0 0 } {1 0 }] 2 14}

*****Begin Execution*****
[Do Action] ActionType 0 | On Goroutine 0 | ToState {0 0} |ChanID 0 |Chan now 0
    <Go func> 1
    <Binding> [0 1]
[Analyze Edges] RGoroutine 0 |At State &{{0 0} [0xc000152ed0] [] [0xc00000c6c0] 2}
    <Edge> 0 | To {0 1} | Op 0 |On Chan 0
[Analyze Edges] RGoroutine 1 |At State &{{1 0} [] [] [0xc00000c7b0] 2}
    <Edge> 0 | To {1 1} | Op 1 |On Chan -1
[singleSends] map[0:[{1 0 0 {0 1} 0 {0 0} 6 0 [] []}]] [singleRecvs] map[0:[{1 0 1 {0 0} 1 {1 1} 7 0 [] []}]]
[available actions]:
<action> 0 {0 0 0 {0 1} 1 {1 1} 4 0 [] []}
[Do Action] ActionType 4 | On Goroutine 0 | ToState {0 1} |ChanID 0 |Chan now 0
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[Analyze Edges] RGoroutine 1 |At State &{{1 1} [] [0xc00000c7b0] [0xc00000c840 0xc00000c870] 2}
    <Edge> 0 | To {1 2} | Op 2 |On Chan 0
    <Edge> 1 | To {1 4} | Op 2 |On Chan 0
[singleSends] map[1:[{2 0 0 {0 2} 0 {0 0} 6 1 [] []}]] [singleRecvs] map[]
[available actions]:
<action> 0 {2 0 1 {1 2} 1 {0 0} 3 0 [0xc0001531d0] []}
<action> 1 {2 0 1 {1 4} 1 {0 0} 3 0 [] []}
[Do Action] ActionType 3 | On Goroutine 1 | ToState {1 2} |ChanID 0 |Chan now 0
    <Go func> 2
    <Binding> [-1 -2]
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[Analyze Edges] RGoroutine 1 |At State &{{1 2} [0xc0001531d0] [0xc00000c840] [0xc00000c7e0] 2}
    <Edge> 0 | To {1 3} | Op 1 |On Chan -1
[Analyze Edges] RGoroutine 2 |At State &{{2 0} [] [] [0xc00000c9c0 0xc00000c9f0] 2}
    <Edge> 0 | To {2 1} | Op 2 |On Chan 0
    <Edge> 1 | To {2 4} | Op 2 |On Chan 0
[singleSends] map[1:[{3 0 0 {0 2} 0 {0 0} 6 1 [] []}]] [singleRecvs] map[0:[{3 0 1 {0 0} 1 {1 3} 7 0 [] []}]]
[available actions]:
<action> 0 {3 0 2 {2 1} 2 {0 0} 3 0 [] []}
<action> 1 {3 0 2 {2 4} 2 {0 0} 3 0 [] []}
[Do Action] ActionType 3 | On Goroutine 2 | ToState {2 1} |ChanID 0 |Chan now 0
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[Analyze Edges] RGoroutine 1 |At State &{{1 2} [0xc0001531d0] [0xc00000c840] [0xc00000c7e0] 2}
    <Edge> 0 | To {1 3} | Op 1 |On Chan -1
[Analyze Edges] RGoroutine 2 |At State &{{2 1} [] [0xc00000c9c0] [0xc00000c960] 2}
    <Edge> 0 | To {2 2} | Op 0 |On Chan -1
[singleSends] map[0:[{4 0 2 {2 2} 2 {0 0} 6 0 [] []}] 1:[{4 0 0 {0 2} 0 {0 0} 6 1 [] []}]] [singleRecvs] map[0:[{4 0 1 {0 0} 1 {1 3} 7 0 [] []}]]
[available actions]:
<action> 0 {0 0 2 {2 2} 1 {1 3} 4 0 [] []}
[Do Action] ActionType 4 | On Goroutine 2 | ToState {2 2} |ChanID 0 |Chan now 0
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[Analyze Edges] RGoroutine 1 |At State &{{1 3} [] [0xc00000c7e0] [0xc00000c8a0] 2}
    <Edge> 0 | To {1 4} | Op 2 |On Chan 0
[Analyze Edges] RGoroutine 2 |At State &{{2 2} [] [0xc00000c960] [0xc00000c990] 2}
    <Edge> 0 | To {2 3} | Op 0 |On Chan -2
[singleSends] map[1:[{5 0 0 {0 2} 0 {0 0} 6 1 [] []} {5 0 2 {2 3} 2 {0 0} 6 1 [] []}]] [singleRecvs] map[]
[available actions]:
<action> 0 {5 0 1 {1 4} 1 {0 0} 3 0 [] []}
[Do Action] ActionType 3 | On Goroutine 1 | ToState {1 4} |ChanID 0 |Chan now 0
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[Analyze Edges] RGoroutine 1 |At State &{{1 4} [] [0xc00000c870 0xc00000c8a0] [0xc00000c810] 2}
    <Edge> 0 | To {1 5} | Op 1 |On Chan -2
[Analyze Edges] RGoroutine 2 |At State &{{2 2} [] [0xc00000c960] [0xc00000c990] 2}
    <Edge> 0 | To {2 3} | Op 0 |On Chan -2
[singleSends] map[1:[{6 0 0 {0 2} 0 {0 0} 6 1 [] []} {6 0 2 {2 3} 2 {0 0} 6 1 [] []}]] [singleRecvs] map[1:[{6 0 1 {0 0} 1 {1 5} 7 1 [] []}]]
[available actions]:
<action> 0 {0 0 0 {0 2} 1 {1 5} 4 1 [] []}
<action> 1 {0 0 2 {2 3} 1 {1 5} 4 1 [] []}
[Do Action] ActionType 4 | On Goroutine 0 | ToState {0 2} |ChanID 1 |Chan now 0
[Execute SUCC]
[Undo Action] ActionType 4 | On Goroutine 0 | ToState {0 2} |ChanID 1 |Chan now 0
[Do Action] ActionType 4 | On Goroutine 2 | ToState {2 3} |ChanID 1 |Chan now 0
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[Analyze Edges] RGoroutine 2 |At State &{{2 3} [] [0xc00000c990] [0xc00000ca20] 2}
    <Edge> 0 | To {2 4} | Op 2 |On Chan 0
[singleSends] map[1:[{7 0 0 {0 2} 0 {0 0} 6 1 [] []}]] [singleRecvs] map[]
[available actions]:
<action> 0 {7 0 2 {2 4} 2 {0 0} 3 0 [] []}
[Do Action] ActionType 3 | On Goroutine 2 | ToState {2 4} |ChanID 0 |Chan now 0
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[singleSends] map[1:[{8 0 0 {0 2} 0 {0 0} 6 1 [] []}]] [singleRecvs] map[]
[available actions]:
[ERROR] goroutine deadlock!
[Undo Action] ActionType 3 | On Goroutine 2 | ToState {2 4} |ChanID 0 |Chan now 0
[Undo Action] ActionType 4 | On Goroutine 2 | ToState {2 3} |ChanID 1 |Chan now 0
[Undo Action] ActionType 3 | On Goroutine 1 | ToState {1 4} |ChanID 0 |Chan now 0
[Undo Action] ActionType 4 | On Goroutine 2 | ToState {2 2} |ChanID 0 |Chan now 0
[Undo Action] ActionType 3 | On Goroutine 2 | ToState {2 1} |ChanID 0 |Chan now 0
[Do Action] ActionType 3 | On Goroutine 2 | ToState {2 4} |ChanID 0 |Chan now 0
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[Analyze Edges] RGoroutine 1 |At State &{{1 2} [0xc0001531d0] [0xc00000c840] [0xc00000c7e0] 2}
    <Edge> 0 | To {1 3} | Op 1 |On Chan -1
[singleSends] map[1:[{4 0 0 {0 2} 0 {0 0} 6 1 [] []}]] [singleRecvs] map[0:[{4 0 1 {0 0} 1 {1 3} 7 0 [] []}]]
[available actions]:
[ERROR] goroutine deadlock!
[Undo Action] ActionType 3 | On Goroutine 2 | ToState {2 4} |ChanID 0 |Chan now 0
[Undo Action] ActionType 3 | On Goroutine 1 | ToState {1 2} |ChanID 0 |Chan now 0
[Do Action] ActionType 3 | On Goroutine 1 | ToState {1 4} |ChanID 0 |Chan now 0
[Analyze Edges] RGoroutine 1 |At State &{{1 4} [] [0xc00000c870 0xc00000c8a0] [0xc00000c810] 2}
    <Edge> 0 | To {1 5} | Op 1 |On Chan -2
[Analyze Edges] RGoroutine 0 |At State &{{0 1} [] [0xc00000c6c0] [0xc00000c6f0] 2}
    <Edge> 0 | To {0 2} | Op 0 |On Chan 1
[singleSends] map[1:[{3 0 0 {0 2} 0 {0 0} 6 1 [] []}]] [singleRecvs] map[1:[{3 0 1 {0 0} 1 {1 5} 7 1 [] []}]]
[available actions]:
<action> 0 {0 0 0 {0 2} 1 {1 5} 4 1 [] []}
[Do Action] ActionType 4 | On Goroutine 0 | ToState {0 2} |ChanID 1 |Chan now 0
[Execute SUCC]
[Undo Action] ActionType 4 | On Goroutine 0 | ToState {0 2} |ChanID 1 |Chan now 0
[Undo Action] ActionType 3 | On Goroutine 1 | ToState {1 4} |ChanID 0 |Chan now 0
[Undo Action] ActionType 4 | On Goroutine 0 | ToState {0 1} |ChanID 0 |Chan now 0
*****End Execution*****

---REPORT---
Detected 2 BUGs in [ testcase/test_controlflow/case4.go ].
Generate 14 STATEs in total.
Execute 4 PATHs in total
-----------
