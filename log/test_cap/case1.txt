# Name: main.main
# Package: main
# Location: testcase/test_cap/case1.go:19:6
func main():
0:                                                                entry P:0 S:0
	t0 = make chan int 1:int                                       chan int
	go send(t0)
	go receive(t0)
	send t0 <- 1:int
	return

<->
[bb]: 0
    <instr> 0 MAKECHAN | make chan int 1:int
        (size) 1:int
        (reg) t0
    <instr> 1 GO | Func name: send | Args:
        (param) 0 | Name: t0 | Type: chan int | Actually is Chan 0
    <instr> 2 GO | Func name: receive | Args:
        (param) 0 | Name: t0 | Type: chan int | Actually is Chan 0
    <instr> 3 SEND | To Reg: t0 | Actually is Chan 0
    <instr> 4 other
[bb] 0 's states:
<state> 0
<state> 1
[bb] 0 's edges:
---

<->
[bb] 0 begin link state
-------------------------
# Name: main.send
# Package: main
# Location: testcase/test_cap/case1.go:11:6
func send(ch chan int):
0:                                                                entry P:0 S:0
	send ch <- 1:int
	return

<->
[Parameters]
    <Param> -1 |Reg: ch
---
[bb]: 0
    <instr> 0 SEND | To Reg: ch | Actually is Chan -1
    <instr> 1 other
[bb] 0 's states:
<state> 0
<state> 1
[bb] 0 's edges:
---

<->
[bb] 0 begin link state
-------------------------
# Name: main.receive
# Package: main
# Location: testcase/test_cap/case1.go:15:6
func receive(ch chan int):
0:                                                                entry P:0 S:0
	t0 = <-ch                                                           int
	return

<->
[Parameters]
    <Param> -1 |Reg: ch
---
[bb]: 0
    <instr> 0 RECV | From Reg: ch | Actually is Chan -1
    <instr> 1 other
[bb] 0 's states:
<state> 0
<state> 1
[bb] 0 's edges:
---

<->
[bb] 0 begin link state
-------------------------
Static Program after build:
 &{[0xc000182c80 0xc000182ce0 0xc000182d00] [{0 1 }] 2 6}

*****Begin Execution*****
[Do Action] ActionType 0 | On Goroutine 0 | ToState {0 0} |ChanID 0 |Chan now 0
    <Go func> 1
    <Binding> [0]
    <Go func> 2
    <Binding> [0]
[Analyze Edges] RGoroutine 0 |At State &{{0 0} [0xc000187a40 0xc000187ad0] [] [0xc000190120] 2}
    <Edge> 0 | To {0 1} | Op 0 |On Chan 0
[Analyze Edges] RGoroutine 1 |At State &{{1 0} [] [] [0xc000190150] 2}
    <Edge> 0 | To {1 1} | Op 0 |On Chan -1
[Analyze Edges] RGoroutine 2 |At State &{{2 0} [] [] [0xc000190180] 2}
    <Edge> 0 | To {2 1} | Op 1 |On Chan -1
[singleSends] map[] [singleRecvs] map[]
[available actions]:
<action> 0 {1 0 0 {0 1} 0 {0 0} 1 0 [] []}
<action> 1 {1 0 1 {1 1} 1 {0 0} 1 0 [] []}
[Do Action] ActionType 1 | On Goroutine 0 | ToState {0 1} |ChanID 0 |Chan now 0
[Execute SUCC]
[Undo Action] ActionType 1 | On Goroutine 0 | ToState {0 1} |ChanID 0 |Chan now 1
[Do Action] ActionType 1 | On Goroutine 1 | ToState {1 1} |ChanID 0 |Chan now 0
[Analyze Edges] RGoroutine 0 |At State &{{0 0} [0xc000187a40 0xc000187ad0] [] [0xc000190120] 2}
    <Edge> 0 | To {0 1} | Op 0 |On Chan 0
[Analyze Edges] RGoroutine 2 |At State &{{2 0} [] [] [0xc000190180] 2}
    <Edge> 0 | To {2 1} | Op 1 |On Chan -1
[singleSends] map[] [singleRecvs] map[]
[available actions]:
<action> 0 {2 0 2 {2 1} 2 {0 0} 2 0 [] []}
[Do Action] ActionType 2 | On Goroutine 2 | ToState {2 1} |ChanID 0 |Chan now 1
[Analyze Edges] RGoroutine 0 |At State &{{0 0} [0xc000187a40 0xc000187ad0] [] [0xc000190120] 2}
    <Edge> 0 | To {0 1} | Op 0 |On Chan 0
[singleSends] map[] [singleRecvs] map[]
[available actions]:
<action> 0 {3 0 0 {0 1} 0 {0 0} 1 0 [] []}
[Do Action] ActionType 1 | On Goroutine 0 | ToState {0 1} |ChanID 0 |Chan now 0
[Execute SUCC]
[Undo Action] ActionType 1 | On Goroutine 0 | ToState {0 1} |ChanID 0 |Chan now 1
[Undo Action] ActionType 2 | On Goroutine 2 | ToState {2 1} |ChanID 0 |Chan now 0
[Undo Action] ActionType 1 | On Goroutine 1 | ToState {1 1} |ChanID 0 |Chan now 1
*****End Execution*****

---REPORT---
Detected 0 BUGs in [ testcase/test_cap/case1.go ].
Generate 6 STATEs in total.
Execute 2 PATHs in total
-----------
